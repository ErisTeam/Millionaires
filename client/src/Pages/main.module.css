.container {
	width: 100vw;
	height: 100vh;
	display: grid;
	grid-template-columns: 1fr 300px;
	place-items: center;
	grid-template-areas: 'game ladder';
	background: url('../assets/backgroundnumbers.png');
}

.ladder {
	z-index: 10;
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	font-size: 1.75em;
	grid-area: ladder;
	position: relative;

	position: relative;
	background: rgba(14, 1, 37, 0.95);
}

.ladder > ol {
	list-style: none;
	min-width: fit-content;

	display: flex;
	flex-direction: column-reverse;
	gap: 0.25em;
	padding: 0.5em;
}
.ladder > ol > li {
	list-style: none;
	justify-content: space-between;
	align-items: center;

	display: flex;
	width: inherit;
	background-color: var(--bg1);
	min-width: 100px;
	text-align: right;
	border: 2px white solid;
	border-radius: 0.5em;
	padding: 0.1em 0.25em;
}
.ladder > ol > li .game {
	display: flex;
	align-items: center;
	justify-content: space-between;
	flex-direction: column;
	width: 100%;
	padding-top: 1em;
	max-width: 800px;
	height: 100%;
	/* background-color: var(--bg1); */
}
.game {
	z-index: 1;
	display: grid;
	border-right: 2px solid var(--accent);

	grid-template-rows: 450px 1fr;
	grid-template-areas: 'ai' 'question';
	width: 100%;
	height: 100%;
	background: rgba(14, 1, 37, 0.85);
}

.game .ai {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: row;
	width: 100%;
	height: 100%;
	z-index: 2;
	grid-area: ai;
	gap: 1em;
}
.game .ai .host {
	background-image: url('../assets/host.png');
}
.game .ai .questionImg {
	background-image: url('../assets/questionImg.png');
}
.game .ai .host,
.game .ai .questionImg {
	background-size: 100% 100%;

	background-repeat: no-repeat;
	width: 400px;
	height: 400px;

	border-radius: 1em;
}

.game .question {
	grid-area: question;
	text-align: center;
	width: 100%;
	display: flex;
	flex-direction: column;
	z-index: 2;
	overflow: hidden;

	background: rgba(14, 1, 37, 0.75);
	/* padding: 1em 3em; */
	height: fit-content;
	padding: 2em 1em;
	border-top: 2px solid var(--accent);
}
.game .question h3 {
	font-size: 1.5em;
	width: 100%;
	height: fit-content;
	display: flex;
	justify-content: center;
	align-items: center;
	line-height: 1.2em;
	padding: 0.25em 3.5em;
}

.hexagon {
	/* clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0 50%); */
	position: relative;
	z-index: 2;
	&::before,
	&::after {
		content: '';
		top: 0;
		left: 0;
		position: absolute;
		width: 100%;
		height: 50%;

		border: 4px solid var(--accent);
		background: var(--primaryGradient);
		z-index: -1;
	}
	&::before {
		transform: perspective(15px) rotateX(3deg) translateZ(-2px);
		border-bottom: none;
	}
	&::after {
		border-top: none;
		transform: perspective(15px) rotateX(-3deg) translateZ(-2px);
		top: 50%;
	}
}

.game .question .buttons {
	display: flex;
	flex-direction: column;

	gap: 0.5em;

	padding-top: 1em;

	list-style: none;

	li {
		position: relative;
		display: flex;
		justify-content: center;

		&::before {
			content: '';
			position: absolute;
			width: 120%;
			left: -10%;
			height: 2px;
			background: var(--secondary);
			top: 50%;
		}
	}

	button {
		position: relative;
		height: 2.25em;
		width: 90%;
		display: flex;
		justify-content: center;
		align-items: center;

		font-size: 1.5em;
		font-weight: bold;

		transition: all 0.25s ease-in-out;

		cursor: pointer;

		border: none;

		z-index: 2;
		background: transparent;
	}
	button:hover {
		scale: 1.05;
	}
}

.questionInfo {
	width: 100%;
	height: 100%;
	/* background-color: var(--bg2); */
}

.gameInfo {
	position: relative;
	display: flex;
	flex-direction: row;
	gap: 1em;
	height: 2.5em;
}
.gameInfo > svg {
	height: inherit;
	aspect-ratio: 1/1;
	width: 2.5em;
	stroke: var(rgb(123, 101, 141));
	background-color: rgb(221, 123, 234);
	border-radius: 50%;
	padding: 0.25em;
	transition: all 0.25s ease-in-out;
	cursor: pointer;
}
.gameInfo > svg:hover {
	scale: 1.05;
	transition: all 0.25s ease-in-out;
}

/* change gradient animation */
